---
# tasks file for zcee_mount_zfs
- name: Delete existing directory if necessary
  file:
    path: '{{zcon_zfs_mountpoint}}/{{softwareServiceInstanceName}}' # /servers/{{softwareServiceInstanceName}}'
    state: absent 
  register: dirpath

- name: Create missing directories
  file:
    path: "{{zcon_zfs_mountpoint}}/{{softwareServiceInstanceName}}/.tmp_server"
    state: directory
    recurse: yes 
    mode: '700'

- name: Query information about the main mountpoint
  shell: df {{ zcon_zfs_mountpoint }}
  register: mountpoint 

- set_fact: 
    mount_dataset: "{{ mountpoint.stdout | regex_search(regexp,'\\1') | first }}"
  vars:
      regexp: '[^\s]+\s+\(([^\s]*)\)\s+[0-9]+'

- name: get parent mount
  shell: expr substr "$(mount -qv {{zcon_zfs_mountpoint}} | grep {{ mount_dataset }})" 5 1
  register: parentmount

- name: Create directories/files - .tmp_server
  file:
    path: '{{ zcon_zfs_mountpoint }}/{{softwareServiceInstanceName}}/.tmp_server'
    state: directory 
    mode: '700'

- name: Create directories/files - .tmp_user 
  file:
    path: 'mkdir {{zcon_zfs_mountpoint}}/{{softwareServiceInstanceName}}/.tmp_user'
    state: directory 
    mode: '700'

- name: Create directories/files - PROVISION_OK
  file:
    path: 'mkdir {{zcon_zfs_mountpoint}}/{{softwareServiceInstanceName}}/PROVISION_OK'
    state: directory 
    mode: '700'
    
- set_fact:
    mountvalue: '{{ {"A": ["yes"], "U": ["unmount"], "-": ["no"]}[parentmount.stdout] | default("") }}'

    # mountvalue: '{{ "yes" if  parentmount.stdout is "A" else "unmount" if parentmount.stdout is "U" else "no" if parentmount.stdout is "-" else "" }}'

- name: mount
  command: 'mount -t ZFS -a {{ mountvalue[0] }} -f {{zcon_file_system_hlq}}.{{softwareServiceInstanceName}} {{ zcon_install_dir }}/wlp/etc'
  register: result
  failed_when: result.rc > 0 and "A problem was found with the mount point specified" not in result.stderr
