---
 
# tasks file for proclib
- name: Proclib operations
  collections:
    - ibm.ibm_zos_core

  block:

    - block:

      - set_fact:
          eager_role_path: '{{role_path}}'

      - include_role:
          name: send-template
        vars:
          path: '{{ eager_role_path }}/templates/DFSE302J.j2'

      when: add and not provision

    - name: Add IMS procs
      command: 'jsub -f {{ uss_file_path }}/DFSE302J.j2'
      # zos_job_submit:
      #   src: '{{ uss_file_path }}/DFSE302J.j2'
      #   location: USS
      #   wait: "{{ zos_job_submit_wait }}"
      #   wait_time_s: "{{ zos_job_submit_wait_s }}"
      #   return_output: "{{ zos_job_submit_return_output }}"
      when: add

    # Add ADDS THE BPECONFG MEMBER TO IMS PROCLIB.
    # THIS MEMBER DEFINES THE CONFIGURATION FILE FOR BPE WITH
    # CQS, OM, RM, SCI.
    - block:

      - set_fact:
          eager_role_path: '{{role_path}}'

      - include_role:
          name: send-template
        vars:
          path: '{{ eager_role_path }}/templates/DFSE303J.j2'

      when: bpeconfg and not provision

    - name: Define IMS subcomponents
      command: 'jsub -f {{ uss_file_path }}/DFSE303J.j2'
      # zos_job_submit:
      #   src: '{{ uss_file_path }}/DFSE303J.j2'
      #   location: USS
      #   wait: "{{ zos_job_submit_wait }}"
      #   wait_time_s: "{{ zos_job_submit_wait_s }}"
      #   return_output: "{{ zos_job_submit_return_output }}"
      when: bpeconfg


    - block:

      - set_fact:
          eager_role_path: '{{role_path}}'

      - include_role:
          name: send-template
        vars:
          path: '{{ eager_role_path }}/templates/DFS4CPYP.j2'

      when: copy and not provision

    - name: Copy procs in IMS PROCLIB
      command: 'jsub -f {{ uss_file_path }}/DFS4CPYP.j2'
      # zos_job_submit:
      #   src: '{{ uss_file_path }}/DFS4CPYP.j2'
      #   location: USS
      #   wait: "{{ zos_job_submit_wait }}"
      #   wait_time_s: "{{ zos_job_submit_wait_s }}"
      #   return_output: "{{ zos_job_submit_return_output }}"
      when: copy


    - block:

      - set_fact:
          eager_role_path: '{{role_path}}'

      - include_role:
          name: send-template
        vars:
          path: '{{ eager_role_path }}/templates/DFSE313J.j2'

      when: copy_to_jobs and not provision

    - name: Copy procs to jobs dataset
      command: 'jsub -f {{ uss_file_path }}/DFSE313J.j2'
      # zos_job_submit:
      #   src: '{{ uss_file_path }}/DFSE313J.j2'
      #   location: USS
      #   wait: "{{ zos_job_submit_wait }}"
      #   wait_time_s: "{{ zos_job_submit_wait_s }}"
      #   return_output: "{{ zos_job_submit_return_output }}"
      when: copy_to_jobs


    - block:

      - set_fact:
          eager_role_path: '{{role_path}}'

      - include_role:
          name: send-template
        vars:
          path: '{{ eager_role_path }}/templates/DFSCPYST.j2'

      when: copy_stage_libs and not provision

    - name: Copy staging libs
      command: 'jsub -f {{ uss_file_path }}/DFSCPYST.j2'
      # zos_job_submit:
      #   src: '{{ uss_file_path }}/DFSCPYST.j2'
      #   location: USS
      #   wait: "{{ zos_job_submit_wait }}"
      #   wait_time_s: "{{ zos_job_submit_wait_s }}"
      #   return_output: "{{ zos_job_submit_return_output }}"
      when: copy_stage_libs


    - block:

      - set_fact:
          eager_role_path: '{{role_path}}'

      - include_role:
          name: send-template
        vars:
          path: '{{ eager_role_path }}/templates/DFSPROCB.j2'

      when: create_sample and not provision

    - name: Create additional sample procedures
      command: 'jsub -f {{ uss_file_path }}/DFSPROCB.j2'
      # zos_job_submit:
      #   src: '{{ uss_file_path }}/DFSPROCB.j2'
      #   location: USS
      #   wait: "{{ zos_job_submit_wait }}"
      #   wait_time_s: "{{ zos_job_submit_wait_s }}"
      #   return_output: "{{ zos_job_submit_return_output }}"
      when: create_sample


    - name: Clean zCloud PROCLIB
      zos_data_set:
        batch:
          - name: '{{ zCloud_PROCLIB }}({{ DFS_IMS_SSID }}CTL)'
            state: absent
            type: MEMBER
          - name: '{{ zCloud_PROCLIB }}({{ DFS_IMS_SSID }}DLI)'
            state: absent
            type: MEMBER
          - name: '{{ zCloud_PROCLIB }}({{ DFS_IMS_SSID }}DRC)'
            state: absent
            type: MEMBER
          - name: '{{ zCloud_PROCLIB }}({{ DFS_IMS_SSID }}OM)'
            state: absent
            type: MEMBER
          - name: '{{ zCloud_PROCLIB }}({{ DFS_IMS_SSID }}SCI)'
            state: absent
            type: MEMBER
          - name: '{{ zCloud_PROCLIB }}({{ DFS_IMS_SSID }}RM)'
            state: absent
            type: MEMBER
          - name: '{{ zCloud_PROCLIB }}({{ DFS_IMS_SSID }}ODBM)'
            state: absent
            type: MEMBER
      when: delete
      ignore_errors: true