- name: Identify Missing Critical Software Updates
  ansible.builtin.include_role:
    name: ibm.ibm_zosmf.zmf_swmgmt_identify_missing_critical_updates
  vars:
    software_instance_name: '{{ item.name }}'
    system_nickname: '{{item.system}}'
    missing_critical_updates_response_file: '{{ software_instance_name }}-MissingCriticalUpdatesReport.json'

- name: Identify Missing Critical Software Updates
  ansible.builtin.include_role:
    name: ibm.ibm_zosmf.zmf_swmgmt_identify_missing_fixcat_updates
  vars:
    software_instance_name: '{{ item.name }}'
    system_nickname: '{{item.system}}'
    missing_fixcat_updates_response_file: '{{ software_instance_name }}-MissingFixcatUpdatesReport.json'


# Assisted by watsonx Code Assistant
# Code generated by WCA@IBM in this programming language is not approved for use in IBM product development.
- name: Read json file
  ansible.builtin.slurp:
    src: "{{ item.name }}-MissingCriticalUpdatesReport.json"
  register: mcu_file_content
  delegate_to: localhost

# Assisted by watsonx Code Assistant
# Code generated by WCA@IBM in this programming language is not approved for use in IBM product development.
- name: Read json file
  ansible.builtin.slurp:
    src: "{{ item.name }}-MissingCriticalUpdatesReport.json"
  register: mfu_file_content
  delegate_to: localhost

- name: Save content in a variable
  ansible.builtin.set_fact:
    mcu: "{{ mcu_file_content['content'] | b64decode | from_json }}"
    mfu: "{{ mfu_file_content['content'] | b64decode | from_json }}"

- name: Get zosmf software instance detail
  ansible.builtin.uri:
    url: "https://{{ zmf_host }}/zosmf/swmgmt/swi/{{item.swiuuid}}"
    method: GET
    user: "{{ zmf_user | trim }}"
    password: "{{ zmf_password | trim }}"
    force_basic_auth: true
    headers:
      Host: "{{ zmf_host }}"
      Origin: "https://{{ zmf_host }}"
    status_code: "200"
    validate_certs: false
    return_content: true
  register: instance_data
  delegate_to: localhost

- ansible.builtin.set_fact:
    info: "{{instance_data.content}}"

- ansible.builtin.debug:
    var: info

- ansible.builtin.set_fact:
    new_swi: "{{ item | default({}) | combine ({
      'info': info,
      'mcu': mcu,
      'mfu': mfu
      }) }}"

- ansible.builtin.debug:
    var: new_swi

- ansible.builtin.set_fact:
    swilist: '{{ swilist | default([]) + [new_swi] }}'

- ansible.builtin.debug:
    var: swilist

- name: Update collated SWI
  ansible.builtin.set_fact:
    collated_swi: "{{ collated_swi | default({}) | combine ({
            'swilist': new_swi
            }) }}"
