- name: Count items in a list
  ansible.builtin.set_fact:
    fmid_fix_map: "{{ fmid_fix_list | community.general.counter }}"

- ansible.builtin.debug:
    var: fmid_fix_map

- name: Convert fmid_fix_map to list of items
  ansible.builtin.set_fact:
    items_list: "{{ fmid_fix_map | dict2items(key_name='key', value_name='value') }}"

- name: Initialize FMID counts dictionary
  ansible.builtin.set_fact:
    fmid_counts: {}

- name: Aggregate counts by FMID
  ansible.builtin.set_fact:
    fmid_counts: "{{ fmid_counts | combine({item_fmid: item_counts}, recursive=true) }}"
  loop: "{{ items_list }}"
  loop_control:
    loop_var: process_item
  vars:
    item_split: "{{ process_item.key.split('-') }}"
    item_fmid: "{{ item_split[0] }}"
    item_type: "{{ item_split[1] | lower }}"
    current_counts: "{{ fmid_counts.get(item_fmid, {'hiper_count': 0, 'pe_count': 0, 'secint_count': 0}) }}"
    item_counts: "{{ current_counts | combine({item_type ~ '_count': process_item.value}) }}"

- name: Create final entries structure
  ansible.builtin.set_fact:
    csi_info:
      entries: "{{ fmid_counts | dict2items | json_query('[].{FMID: key, hiper_count: value.hiper_count, pe_count: value.pe_count, secint_count: value.secint_count}') }}"
