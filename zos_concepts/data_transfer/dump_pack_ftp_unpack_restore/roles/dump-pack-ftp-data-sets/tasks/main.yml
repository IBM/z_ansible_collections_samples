---
# Copyright (c) IBM Corporation 2020

# tasks file for dump-pack-ftp-data-sets
- name: Raise error if required variables are not set
  ansible.builtin.fail:
    msg: Missing at least one required variable.
  failed_when: data_sets_to_dump is not defined or
    data_sets_to_dump|length == 0 or
    target_hostname is not defined or
    target_hostname == "" or
    target_user is not defined or
    target_user == "" or
    target_password is not defined or
    target_password == ""

- name: Estimate the total used size of all provided data sets
  ansible.builtin.include_role:
    name: get-estimated-size-of-data-sets
  vars:
    data_sets: "{{ data_sets_to_dump }}"

- block:
    - name: Create data set for archive
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ archive_data_set if archive_data_set | default(false) else omit }}"
        replace: true
        type: seq
        space_primary: "{{ size_in_cyls.get('primary') }}"
        space_secondary: "{{ size_in_cyls.get('secondary') }}"
        space_type: cyl
      register: archive_data_set_final

    - block:
        - name: Take a set of data sets and write them to an archive.
          ibm.ibm_zos_core.zos_mvs_raw:
            program_name: adrdssu
            auth: true
            dds:
              - dd_data_set:
                  dd_name: archive
                  data_set_name: "{{ archive_data_set_final.get('names')[0] }}"
                  disposition: old
              - dd_input:
                  dd_name: sysin
                  content: "{{ lookup('template', '../templates/adrdssu-dump.j2') }}"
                  return_content:
                    type: text
              - dd_output:
                  dd_name: sysprint
                  return_content:
                    type: text
          register: dump_response
          failed_when: dump_response.ret_code.code > 0
      always:
        - name: Get the output of dump execution
          ansible.builtin.debug:
            var: dump_response
          when: dump_response is defined

    - name: Create data set for terse
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ terse_data_set if terse_data_set | default(false) else omit }}"
        replace: true
        type: seq
        space_primary: "{{ size_in_cyls.get('primary') }}"
        space_secondary: "{{ size_in_cyls.get('secondary') }}"
        space_type: cyl
        record_length: 1024
      register: terse_data_set_final

    - block:
        - name: Terse the data set dump
          ibm.ibm_zos_core.zos_mvs_raw:
            program_name: amaterse
            parm: "SPACK"
            dds:
              - dd_data_set:
                  dd_name: sysut1
                  data_set_name: "{{ archive_data_set_final.get('names')[0] }}"
                  disposition: shr
              - dd_data_set:
                  dd_name: sysut2
                  data_set_name: "{{ terse_data_set_final.get('names')[0] }}"
                  disposition: old
              - dd_output:
                  dd_name: sysprint
                  return_content:
                    type: text
          register: terse_response

      always:
        - name: Get the output of terse execution
          ansible.builtin.debug:
            var: terse_response
          when: terse_response is defined

    - name: Determine name to use for target data set
      ansible.builtin.set_fact:
        target_data_set: "{{ target_data_set if target_data_set is defined and target_data_set else terse_data_set_final.get('names')[0] }}"
      run_once: true

    - block:
        - name: FTP the terse data set to destination
          ibm.ibm_zos_core.zos_mvs_raw:
            program_name: ftp
            auth: true
            dds:
              - dd_output:
                  dd_name: output
                  return_content:
                    type: text
              - dd_input:
                  dd_name: input
                  content: "{{ lookup('template', '../templates/ftp-commands.j2') }}"
          register: ftp_response
          failed_when: ftp_response.ret_code.code > 0
      always:
        - ansible.builtin.debug:
            var: ftp_response
          when: ftp_response is defined
  always:
    - name: Clean up archive data set
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ archive_data_set_final.get('names')[0] }}"
        state: absent
      when: delete and archive_data_set_final is defined and archive_data_set_final|length > 0
    - name: Clean up terse data set
      ibm.ibm_zos_core.zos_data_set:
        name: "{{ terse_data_set_final.get('names')[0] }}"
        state: absent
      when: delete and terse_data_set_final is defined and terse_data_set_final|length > 0
