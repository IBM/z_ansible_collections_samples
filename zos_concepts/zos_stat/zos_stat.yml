###############################################################################
# Â© Copyright IBM Corporation 2025
###############################################################################

###############################################################################
# This playbook demonstrates how to use zos_stat to query the attributes of
# different types of resources found in z/OS (such as data sets, Generation
# Data Groups, aggregates and USS files) using Red Hat Ansible Certified
# Content for IBM Z.
# This playbook is divided up into five independent sections. The tasks in each
# section are grouped into 'blocks' that are tagged. The example below shows how
# the playbook can be run so that only the tasks in the block tagged as
# 'data_set' are run.
#
# Usage:
#  ansible-playbook -i <inventory> <playbook>
#
# Example:
#  ansible-playbook -i inventories zos_stat.yml
#  ansible-playbook -i inventories zos_stat.yml --tags data_set
#
# Requirements:
#   IBM z/OS core collection 1.14.0 or later.
#
# Optional:
#   available_volumes - Names of the volumes where the sample will allocate
#                       data sets.
###############################################################################

- name: Sample zos_stat playbook.
  hosts: zos_host
  collections:
    - "ibm.ibm_zos_core"
  gather_facts: false
  environment: '{{ environment_vars }}'

  vars:
    available_volumes:
      - '000000'
      - '222222'

  tasks:

    ##############################################################################
    # This first block shows examples of the output given by zos_stat when
    # querying data sets.
    # The tasks will allocate temporary data sets in the managed node and then
    # get their attributes with zos_stat. The tasks will allocate a sequential
    # data set on a single volumes and then another on multiple volumes.
    # Additionally, the tasks will highlight how zos_stat can query data sets
    # when the volumes option isn't present.
    ##############################################################################
    - name: Query different data sets.
      tags: data_set
      block:
        - name: Create a temporary data set name.
          command: "mvstmp {{ ansible_user | upper }}"
          register: tmp_ds

        - name: Setting fact `seq_data_set_name` for use by this sample.
          set_fact:
            seq_data_set_name: "{{ tmp_ds.stdout }}"

        - name: Allocate temporary sequential data set.
          ibm.ibm_zos_core.zos_data_set:
            name: "{{ seq_data_set_name }}"
            type: seq
            state: present
            space_primary: 3
            space_secondary: 1
            space_type: trk
            record_format: fba
            record_length: 60
            volume: "{{ available_volumes[0] }}"

        - name: "Query {{ seq_data_set_name }} attributes with zos_stat."
          ibm.ibm_zos_core.zos_stat:
            name: "{{ seq_data_set_name }}"
            type: data_set
          register: seq_data_set_stat

        - name: Inspect output from zos_stat.
          ansible.builtin.debug:
            msg: "{{ seq_data_set_stat }}"

        - name: Create a temporary data set name for a multi-volume data set.
          command: "mvstmp {{ ansible_user | upper }}"
          register: tmp_ds

        - name: Setting fact `multi_vol_data_set_name` for use by this sample.
          set_fact:
            multi_vol_data_set_name: "{{ tmp_ds.stdout }}"

        - name: Allocate temporary sequential data set on multiple volumes.
          ibm.ibm_zos_core.zos_data_set:
            name: "{{ multi_vol_data_set_name }}"
            type: seq
            state: present
            space_primary: 3
            space_secondary: 1
            space_type: trk
            record_format: fba
            record_length: 60
            volumes: "{{ available_volumes }}"

        - name: "Query {{ multi_vol_data_set_name }} attributes with zos_stat."
          ibm.ibm_zos_core.zos_stat:
            name: "{{ multi_vol_data_set_name }}"
            type: data_set
            volumes: "{{ available_volumes }}"
          register: multi_vol_data_set_stat

        - name: Inspect output from zos_stat.
          ansible.builtin.debug:
            msg: "{{ multi_vol_data_set_stat }}"

        - name: Remove temporary data sets allocated in this block.
          ibm.ibm_zos_core.zos_data_set:
            batch:
              - name: "{{ seq_data_set_name }}"
                state: absent
              - name: "{{ multi_vol_data_set_name }}"
                state: absent
