###############################################################################
# Â© Copyright IBM Corporation 2020, 2021
###############################################################################
# This sample playbook demonstrates basic data set operations using modules
# included in the Red Hat Ansible Certified  Content for IBM Z core collection.
#
# Usage:
#  ansible-playbook -i <inventory> <playbook>
#
# Example:
#  ansible-playbook -i inventories data_set_basics.yml
#  ansible-playbook -i inventories data_set_basics.yml -v
#
#  Additional facts for this playbook can be configured to override the defaults
#  by reviewing the "Fact setting" section of this playbook, for example,
#  `data_set_name` and `system_name`.
#
# Requirements:
#   IBM z/OS core collection 1.2.0 or later
#
# Configure:
#   tgt_tmp_dir - this is the USS directory on the target which will be written
#                 to for this example.
#   ctl_tmp_dir - this is the directory on the controller which will be written
#                 to for this example.
# Optional:
#   data_set_name - this is the data set name that will be created during
#                   execution of this sample.
#   pds_name - this is the pds name that will be used during execution of this
#              sample.
#   system_name - this is the system name that will be used during this example,
#                 determined by executing `uname -n` on the target.
###############################################################################

---
- hosts: zos_host
  collections:
    - ibm.ibm_zos_core
  gather_facts: no
  vars:
    tgt_tmp_dir: "/tmp"
    ctl_tmp_dir: "/tmp"
  environment: "{{ environment_vars }}"

  tasks:
    # ##########################################################################
    # Generate a temporary data set name
    # ##########################################################################
    - name: Create temp sequential data set name
      command: "mvstmp {{ ansible_user | upper }}"
      register: tmp_ds_seq

    - name: Create temp sequential data set name
      command: "mvstmp {{ ansible_user | upper }}"
      register: tmp_ds_pds

    # ##########################################################################
    # Fact setting for use by this playbook
    # ##########################################################################
    - name: Setting fact `data_set_name` for use by this sample
      set_fact:
        data_set_name: "{{ tmp_ds_seq.stdout }}"
        pds_name: "{{ tmp_ds_pds.stdout }}"

    - name: Fact `data_set_name` set with value
      debug:
        msg: "{{ data_set_name }}"

    - name: Detecting system name
      command: uname -n
      register: result

    - name: Setting fact `system_name` for use by this sample
      set_fact:
        system_name: "{{ result.stdout }}"

    - name: Fact `system_name` set with value
      debug:
        msg: "{{ system_name }}"

    ############################################################################
    # Modules zos_data_set, zos_fetch
    ############################################################################
    # +-------------------------------------------------------------------------
    # | 1. Create a sequential data set
    # | 2. Create a USS file and populate it with some data
    # | 3. Copy the USS file to the sequential data set
    # | 4. Create a PDS and a member within the PDS
    # | 5. Copy the sequential data set to the PDS member
    # | 6. Create a new PDS, replacing the existing one
    # | 7. Delete all data sets that were created during playbook execution
    # +-------------------------------------------------------------------------

    - name: Create a sequential data set
      zos_data_set:
        name: "{{ data_set_name }}"
        type: seq
        state: present
        replace: true
        format: fb
        record_length: 100
        size: 5M
        volume: dimato
      register: result

    - name: Response for data set creation
      debug:
        msg: "{{ result }}"

    - name: Create a USS file
      file:
        path: "{{ tgt_tmp_dir }}/HELLO"
        state: touch
      register: result

    - name: Response for USS file creation
      debug:
        msg: "{{ result }}"

    - zos_copy:
        src: "{{ playbook_dir }}/files/HELLO.jcl"
        dest: "/tmp/HELLO"
       #remote_src: yes
      register: result

    - name: Response for populating USS file {{ tgt_tmp_dir }}/HELLO
        on target {{ inventory_hostname }}
      debug:
        msg: "{{ result }}"

    - name: Copy the USS file to the sequential data set
      zos_copy:
        src: "{{ tgt_tmp_dir }}/HELLO"
        dest: "{{ data_set_name }}"
        remote_src: yes
      register: result

    - name: Response for copying USS file to data set
      debug:
        msg: "{{ result }}"

    - name: Create a PDS
      zos_data_set:
        name: "{{ pds_name }}"
        type: pds
        size: 5M
        format: fba
        record_length: 100
      register: result

    - name: Response for creating the PDS
      debug:
        msg: "{{ result }}"

    - name: Create a PDS member
      zos_data_set:
        name: "{{ pds_name }}(HELLO)"
        type: MEMBER
      register: result

    - name: Response for creating the PDS member
      debug:
        msg: "{{ result }}"

    - name: Copy the sequential data set to PDS member
      zos_copy:
        src: "{{ data_set_name }}"
        dest: "{{ pds_name }}(HELLO)"
        remote_src: yes
      register: result

    - name: Response for copying {{ data_set_name }} to {{ pds_name }}(HELLO)
      debug:
        msg: "{{ result }}"

    - name: Delete the data sets
      zos_data_set:
        batch:
          - name: "{{ data_set_name }}"
            state: absent
          - name: "{{ pds_name }}"
            state: absent
      register: result

    - name: Response for deleting the data sets
      debug:
        msg: "{{ result }}"

    - name: Clean up {{ tgt_tmp_dir }}
      file:
        path: "{{ tgt_tmp_dir }}/HELLO"
        state: absent
