# =================================================================
# Copyright 2021 https://github.com/openshift/installer
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# =================================================================

# Required Python packages:
#
# ansible
# openstackclient
# openstacksdk

- hosts: localhost
  gather_facts: no

  tasks:
  - name: oc path to configs.imageregistry.operator.openshift.io/cluster
    command: ./oc patch configs.imageregistry.operator.openshift.io/cluster --type merge --patch '{"spec":{"storage":{"emptyDir":{}}}}'
    environment:
      KUBECONFIG: "./auth/kubeconfig"
    retries: 100
    delay: 10
    register: result
    until: result is not failed

  - name: Approve the pending CSR
    shell: |
        export KUBECONFIG=./auth/kubeconfig
        for i in `./oc get csr --no-headers | grep -i pending |  awk '{ print $1 }'`; do ./oc adm certificate approve $i; done

  - name: oc get co
    command: ./oc get co
    environment:
      KUBECONFIG: "./auth/kubeconfig"
    retries: 100
    delay: 10
    register: result
    until: result is not failed

  - name: oc get csr
    command: ./oc get csr
    environment:
      KUBECONFIG: "./auth/kubeconfig"
    retries: 100
    delay: 10
    register: result
    until: result is not failed

  - name: Wait-for install-complete
    command: "./openshift-install wait-for install-complete"
    async: 3600
    poll: 0
    register: install_complete_sleeper

  - name: 'Waiting for install-complete'
    async_status:
      jid: "{{ install_complete_sleeper.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: 1200
    delay: 30

  - name: Check kubeadmin-password
    slurp:
      src: "./auth/kubeadmin-password"
    register: kubeadmin_password

  - name: Show kubeadmin-password
    debug:
      msg: "{{ kubeadmin_password.content | b64decode }}"