{% set masters    = cluster_nodes['masters'] %}
{% set infra      = cluster_nodes['infra'] %}

global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  forwardfor except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend ocp4-kubernetes-api-server
   mode tcp
   option tcplog
   bind api.{{ cluster_name }}.{{ base_domain }}:6443
   bind api-int.{{ cluster_name }}.{{ base_domain }}:6443
   default_backend ocp4-kubernetes-api-server

frontend ocp4-machine-config-server
   mode tcp
   option tcplog
   bind api.{{ cluster_name }}.{{ base_domain }}:22623
   bind api-int.{{ cluster_name }}.{{ base_domain }}:22623
   default_backend ocp4-machine-config-server

frontend ocp4-router-http
   mode tcp
   option tcplog
   bind apps.{{ cluster_name }}.{{ base_domain }}:80
   default_backend ocp4-router-http

frontend ocp4-router-https
   mode tcp
   option tcplog
   bind apps.{{ cluster_name }}.{{ base_domain }}:443
   default_backend ocp4-router-https

backend ocp4-kubernetes-api-server
   mode tcp
   balance source
   server bootstrap bootstrap.{{ cluster_name }}.{{ base_domain }}:6443 check
{% for item in masters.keys() %}
   server {{ item }} {{ item }}.{{ cluster_name }}.{{ base_domain }}:6443 check
{% endfor %}

backend ocp4-machine-config-server
   mode tcp
   balance source
   server bootstrap bootstrap.{{ cluster_name }}.{{ base_domain }}:22623 check
{% for item in masters.keys() %}
   server {{ item }} {{ item }}.{{ cluster_name }}.{{ base_domain }}:22623 check
{% endfor %}

backend ocp4-router-http
   mode tcp
{% if infra is defined and infra|length > 0 %}
   {% for item in infra.keys() %}
      server {{ item }} {{ item }}.{{ cluster_name }}.{{ base_domain }}:80 check
   {% endfor %}
{% else %}
   {% for item in masters.keys() %}
      server {{ item }} {{ item }}.{{ cluster_name }}.{{ base_domain }}:22623 check
   {% endfor %}
{% endif %}

backend ocp4-router-https
   mode tcp
{% if infra is defined and infra|length > 0 %}
   {% for item in infra.keys() %}
      server {{ item }} {{ item }}.{{ cluster_name }}.{{ base_domain }}:443 check
   {% endfor %}
{% else %}
   {% for item in masters.keys() %}
   server {{ item }} {{ item }}.{{ cluster_name }}.{{ base_domain }}:22623 check
   {% endfor %}
{% endif %}
