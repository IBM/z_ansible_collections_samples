# =================================================================
# Copyright 2021 https://github.com/openshift/installer
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# =================================================================

# =================================================================
# Licensed Materials - Property of IBM
#
# (c) Copyright IBM Corp. 2021 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
# =================================================================
#
# Change Summary: 
# - Move port creation to network.yaml
# - Delete unnecessary Ansible task
# - Add server creation timeout

# Required Python packages:
#
# ansible
# openstackclient
# openstacksdk
# netaddr

- name: 'Import common yaml'
  import_tasks: common.yaml

- name: 'List the server groups'
  command:
    # os-compute-api-version 2.15 or higher is required for the 'soft-anti-affinity' policy
    cmd: "openstack --os-compute-api-version=2.15 server group list -f json -c ID -c Name"
  register: server_group_list

- name: 'Parse the server group ID from existing'
  set_fact:
    server_group_id: "{{ (server_group_list.stdout | from_json | json_query(list_query) | first).ID }}"
  vars:
    list_query: "[?Name=='{{ os_cp_server_group_name }}']"
  when:
  - "os_cp_server_group_name|string in server_group_list.stdout"

- name: 'Create the control server group'
  command:
    # os-compute-api-version 2.15 or higher is required for the 'soft-anti-affinity' policy
    cmd: "openstack --os-compute-api-version=2.15 server group create -f json -c id --policy=soft-anti-affinity {{ os_cp_server_group_name }}"
  register: server_group_created
  when:
  - server_group_id is not defined

- name: 'Parse the server group ID from creation'
  set_fact:
    server_group_id: "{{ (server_group_created.stdout | from_json).id }}"
  when:
  - server_group_id is not defined

- name: 'Create the control servers'
  os_server:
    name: "{{ item.1 }}-{{ item.0 }}"
    image: "rhcos"
    flavor: "{{ os_flavor_master }}"
    auto_ip: no
    availability_zone: "{{ create_server_zone }}"
    timeout: "{{ create_server_timeout|int * 60 }}" 
    # The ignition filename will be concatenated with the Control Plane node
    # name and its 0-indexed serial number.
    # In this case, the first node will look for this filename:
    #    "{{ infraID }}-master-0-ignition.json"
    userdata: "{{ lookup('file', [item.1, item.0, 'ignition.json'] | join('-')) | string }}"
    nics:
    - port-name: "{{ os_port_master }}-{{ item.0 }}"
    scheduler_hints:
      group: "{{ server_group_id }}"
    meta: "{{ cluster_id_tag }}"
  with_indexed_items: "{{ [os_cp_server_name] * os_control_nodes_number }}"
  environment: 
    PYTHONWARNINGS: 'ignore::UserWarning'
  when:
  - disk_type == "dasd"
  register: create_master
  failed_when:
    - '"failed: [localhost]" in create_master'
    - '"ValueError: dictionary update sequence element #0 has length 1; 2 is required" not in create_master'

- name: 'Convert master flavor from value into number'
  command:
    cmd: "openstack flavor show {{ os_flavor_master }} -c disk -f value"
  register: master_flavor_size
  when:
  - disk_type == "scsi"

- name: 'Create the control servers with default boot volume'
  os_server:
    name: "{{ item.1 }}-{{ item.0 }}"
    image: "rhcos"
    flavor: "{{ os_flavor_master }}"
    auto_ip: no
    availability_zone: "{{ create_server_zone }}"
    timeout: "{{ create_server_timeout|int * 60 }}" 
    # The ignition filename will be concatenated with the Control Plane node
    # name and its 0-indexed serial number.
    # In this case, the first node will look for this filename:
    #    "{{ infraID }}-master-0-ignition.json"
    userdata: "{{ lookup('file', [item.1, item.0, 'ignition.json'] | join('-')) | string }}"
    nics:
    - port-name: "{{ os_port_master }}-{{ item.0 }}"
    scheduler_hints:
      group: "{{ server_group_id }}"
    meta: "{{ cluster_id_tag }}"
    boot_from_volume: True
    volume_size: "{{ master_flavor_size.stdout_lines[0]}}"
    terminate_volume: True
  with_indexed_items: "{{ [os_cp_server_name] * os_control_nodes_number }}"
  environment: 
    PYTHONWARNINGS: 'ignore::UserWarning'
  when:
  - disk_type == "scsi"
  - volume_type_id is not defined
  register: create_master
  failed_when:
    - '"failed: [localhost]" in create_master'
    - '"ValueError: dictionary update sequence element #0 has length 1; 2 is required" not in create_master'
  
- name: Create control boot volume
  os_volume:
    state: present
    name: "{{ item.1 }}-{{ item.0 }}-boot"
    image: "rhcos"
    size: "{{ master_flavor_size.stdout_lines[0]}}"
    volume_type: "{{ volume_type_id }}"
    metadata: "{{ cluster_id_tag }}"
    timeout: "{{ create_server_timeout|int * 60 }}" 
  with_indexed_items: "{{ [os_cp_server_name] * os_control_nodes_number }}"
  when: 
  - disk_type == "scsi"
  - volume_type_id is defined

- name: 'Set control volume bootable'
  shell: openstack --os-volume-api-version=3 volume set --bootable "{{ item.1 }}-{{ item.0 }}-boot"
  with_indexed_items: "{{ [os_cp_server_name] * os_control_nodes_number }}"
  when: 
  - disk_type == "scsi"
  - volume_type_id is defined

- name: 'Create the control server with boot volume'
  os_server:
    name: "{{ item.1 }}-{{ item.0 }}"
    flavor: "{{ os_flavor_master }}"
    boot_volume: "{{ item.1 }}-{{ item.0 }}-boot"
    auto_ip: no
    availability_zone: "{{ create_server_zone }}"
    timeout: "{{ create_server_timeout|int * 60 }}" 
    userdata: "{{ lookup('file', [item.1, item.0, 'ignition.json'] | join('-')) | string }}"
    nics:
    - port-name: "{{ os_port_master }}-{{ item.0 }}"
    meta: "{{ cluster_id_tag }}"
    terminate_volume: True
  with_indexed_items: "{{ [os_cp_server_name] * os_control_nodes_number }}"
  environment: 
    PYTHONWARNINGS: 'ignore::UserWarning'
  when:
  - disk_type == "scsi"
  - volume_type_id is defined
