# =================================================================
# Copyright 2021 https://github.com/openshift/installer
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# =================================================================

# Required Python packages:
#
# ansible
# openstackclient
# openstacksdk

- hosts: localhost
  gather_facts: false

  tasks:
    - name: 'Import common yaml'
      ansible.builtin.include_tasks: "{{ playbook_dir }}/common.yaml"

    - name: 'Remove the control servers'
      openstack.cloud.server:
        name: "{{ item.1 }}-{{ item.0 }}"
        state: absent
      with_indexed_items: "{{ [os_cp_server_name] * os_control_nodes_number }}"

    - name: 'List the server groups'
      ansible.builtin.command:
        # os-compute-api-version 2.15 or higher is required for the 'soft-anti-affinity' policy
        cmd: "openstack --os-compute-api-version=2.15 server group list -f json -c ID -c Name"
      register: server_group_list

    - name: 'Parse the server group ID from existing'
      ansible.builtin.set_fact:
        server_group_id: "{{ (server_group_list.stdout | from_json | json_query(list_query) | first).ID }}"
      vars:
        list_query: "[?Name=='{{ os_cp_server_group_name }}']"
      when:
        - "os_cp_server_group_name|string in server_group_list.stdout"

    - name: 'Remove the control server group'
      ansible.builtin.command:
        # os-compute-api-version 2.15 or higher is required for the 'soft-anti-affinity' policy
        cmd: "openstack --os-compute-api-version=2.15 server group delete {{ server_group_id }}"
      when:
        - server_group_id is defined

- hosts: bastion
  tasks:
    - name: 'Check whether use internal bastion'
      set_fact:
        use_internal_bastion: "{{ hostvars['localhost']['use_internal_bastion'] }}"

    - name: 'Set fact of domain info'
      set_fact:
        cluster_domain_name: "{{ hostvars['localhost']['cluster_name'] }}.{{ hostvars['localhost']['base_domain'] }}"

    - name: 'Validate master exits'
      ansible.builtin.shell: | 
        count=$(grep -c 'master' /var/named/{{ cluster_domain_name  }}.zone)
        echo $count
      register: master_exists_count

    - name: 'Get the line number of the master'
      ansible.builtin.shell: grep 'master' /var/named/{{ cluster_domain_name  }}.zone
      register: master_ln
      when: master_exists_count.stdout | int > 0

    - name: Remove /etc/haproxy/haproxy.cfg info with masters
      ansible.builtin.shell: sed -i '/{{ item.split(' ')[0] }}/d' /etc/haproxy/haproxy.cfg
      with_items: "{{ master_ln.stdout_lines }}"
      when:
        - master_exists_count.stdout | int > 0
        - use_internal_bastion == true

    - name: Remove bastion dns info with masters
      ansible.builtin.shell: sed -i '/{{ item.split(' ')[0] }}/d' /var/named/{{ cluster_domain_name  }}.zone
      with_items: "{{ master_ln.stdout_lines }}"
      when:
        - master_exists_count.stdout | int > 0
        - use_internal_bastion == true
