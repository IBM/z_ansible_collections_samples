#*+-------------------------------------------------------------------+
#*| IBM Confidential                                                  |
#*|                                                                   |
#*| Licensed Materials - Property of IBM                              |
#*|                                                                   |
#*|                                                                   |
#*| Â© Copyright IBM Corp. 2025 All Rights Reserved                    |
#*|                                                                   |
#*| The source code for this program is not published or otherwise    |
#*| divested of its trade secrets, irrespective of what has been      |
#*| deposited with the U.S. Copyright Office.                         |
#*+-------------------------------------------------------------------+



- name: ACC Playbook, run by ACC-owner, for ACC-owner actions
  hosts: localhost
  gather_facts : true
  vars_files:
    - owner_vars.yaml

  tasks:
    - name: 17 - Get authentication token from the ACC as appliance-owner
      tags: owner, install
      uri:
        url: "{{ acc_ip }}/user/token"
        method: POST
        body:
          username: "{{ cc_owner_user }}"
          password: "{{ cc_owner_password }}"
        body_format: json
        return_content: true
        validate_certs: false
      register: auth_response

    - name: Extract the token
      tags: owner, install
      set_fact:
        access_token: "{{ auth_response.json.access_token }}"

    - name: 18 - Get list of running appliance
      uri:
        url: "{{ acc_ip }}/resource/quotas"
        method: GET
        headers:
          Accept: "application/json"
          Authorization: "Bearer {{ access_token }}"
        validate_certs: false
      register: quotas_response

    - name: Fail if no appliances found
      fail:
        msg: "No appliances found in resource quotas for this owner."
      when: quotas_response.json | length == 0

    
    - name: Print available appliances summary
      debug:
        msg: >
          {% for app in quotas_response.json %}
            ID: {{ app.id }},
            Name: {{ app.name }},
            IP: {{ app.interfaces[0].ip | default('N/A') }},
            Status: {{ 'Locked' if app.is_locked else 'Unlocked' }}
          {% endfor %}

    - name: Unlock appliances one by one
      include_tasks: 13_unlock_each_appliance.yaml
      loop: "{{ quotas_response.json }}"
      loop_control:
        loop_var: appliance
      