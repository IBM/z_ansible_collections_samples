#*+-------------------------------------------------------------------+
#*| IBM Confidential                                                  |
#*|                                                                   |
#*| Licensed Materials - Property of IBM                              |
#*|                                                                   |
#*|                                                                   |
#*| Â© Copyright IBM Corp. 2025 All Rights Reserved                    |
#*|                                                                   |
#*| The source code for this program is not published or otherwise    |
#*| divested of its trade secrets, irrespective of what has been      |
#*| deposited with the U.S. Copyright Office.                         |
#*+-------------------------------------------------------------------+

- name: ACC playbook, run by ACC-admin, for inserting HMC credentials
  hosts: localhost
  gather_facts : true
  vars_files:
    - env_vars.yaml
  vars_prompt:
    - name: cc_admin_user
      prompt: "Enter ACC LPAR's username"
      private: no

    - name: cc_admin_password
      prompt: "Enter ACC LPAR's Password"
      private: yes
  tasks:
    - name: 01 - Get authentication token from the ACC as admin
      uri:
        url: "https://{{ acc_ip }}:{{ acc_port }}/api/user/token"
        body:
          username: "{{ cc_admin_user }}"
          password: "{{ cc_admin_password }}"
        body_format: json
        method: POST
        return_content: true
        validate_certs: false
      register: auth_response

    - name: Extract the admin token
      set_fact:
        access_token: "{{ auth_response.json.access_token }}"

    - name: 02 - Set HMC configuration in the ACC
      uri:
        url: "https://{{ acc_ip }}:{{ acc_port }}/api/config/hmcconfig"
        timeout: 200
        method: POST
        body:
          host: "{{ hmc_url }}"
          userid: "{{ hmc_user }}"
          password: "{{ hmc_password }}"
          verify_cert: false
        body_format: json
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: application/json
        validate_certs: false
        status_code: 204
      register: response

    - name: 03 - As a validation, get list of CPCs attached to the HMC
      uri:
        url: "https://{{ acc_ip }}:{{ acc_port }}/api/cpcs"
        method: GET
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: application/json
        validate_certs: false
      register: response

    - name: Printing the available CPCs
      debug:
        msg: "{{ response.json }}"
